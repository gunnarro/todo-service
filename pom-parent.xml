<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.gunnarro.microservice</groupId>
    <artifactId>spring-boot-microservice-common-pom</artifactId>
    <version>3.3.0-SNAPSHOT</version>
    <name>Common pom for Spring Boot Microservice Projects</name>
    <packaging>pom</packaging>

    <organization>
        <name>gunnarro as</name>
        <url>https://gunnarro-web.azurewebsites.net/</url>
    </organization>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <skip.integrationtests>true</skip.integrationtests>
        <!-- spring version -->
        <spring.boot.version>3.4.9</spring.boot.version>
        <!-- spring library override version -->
        <snakeyaml.version>2.2</snakeyaml.version>
        <!-- dependencies version properties -->
       <!-- <springdoc-openapi.version>1.8.0</springdoc-openapi.version> -->
        <jasypt.version>3.0.5</jasypt.version>
        <disruptor.version>4.0.0</disruptor.version>
        <aspectjrt.version>1.9.24</aspectjrt.version>
        <apache.collections4.version>4.5</apache.collections4.version>
        <prometheus.version>1.15.3</prometheus.version>
        <liquibase.version>4.26.0</liquibase.version>
        <!-- plugin version properties -->
        <mvn-release.plugin.version>3.0.1</mvn-release.plugin.version>
        <jacoco.plugin.version>0.8.12</jacoco.plugin.version>
        <sonar.plugin.version>3.9.1.2184</sonar.plugin.version>
        <surefire.plugin.version>3.3.1</surefire.plugin.version>
        <failsafe.plugin.version>3.3.1</failsafe.plugin.version>
        <buildhelper.plugin.version>3.5.0</buildhelper.plugin.version>
        <assembler.plugin.version>3.2.0</assembler.plugin.version>
        <dependencycheck.plugin.version>10.0.3</dependencycheck.plugin.version>
        <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
        <zally-maven-plugin.version>1.1.1</zally-maven-plugin.version>
        <zally-ruleset-zalando.version>2.1.1</zally-ruleset-zalando.version>
        <mvn-jib-plugin.version>3.4.3</mvn-jib-plugin.version>
    </properties>

    <!-- Run integration test only: 			            -->
    <!-- mvn clean verify -Pintegration-test 		        -->
    <!-- Run unit test only:                                -->
    <!-- mvn clean verify 	                                -->
    <!-- mvn clean install -Dskip.integrationtests=false 	-->

    <!-- Dependency management section, common dependencies for spring boot microservices -->
    <dependencyManagement>
        <dependencies>
            <!-- all spring boot dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- for en/decryption -->
        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
            <version>${jasypt.version}</version>
        </dependency>
        <!-- For API documentation -->
        <!-- The springdoc-openapi dependency includes Swagger UI -->
        <!--
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>
        -->
        <!-- Needed for Async Logging with Log4j 2 -->
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>${disruptor.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${apache.collections4.version}</version>
        </dependency>
        <!-- Micrometer Prometheus registry for monitoring purpose -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${prometheus.version}</version>
        </dependency>
        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- database -->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
        </dependency>
        <!-- For testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-versions</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>pre-integration-test</id>
                            <goals>
                                <goal>start</goal>
                            </goals>
                            <configuration>
                                <skip>${skip.integrationtests}</skip>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-integration-test</id>
                            <goals>
                                <goal>stop</goal>
                            </goals>
                            <configuration>
                                <skip>${skip.integrationtests}</skip>
                            </configuration>
                        </execution>
                        <execution>
                            <id>repackage</id>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                            <configuration>
                                <mainClass>${start-class}</mainClass>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <mainClass>${start-class}</mainClass>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <skip>${skip.integrationtests}</skip>
                        <additionalClasspathElements>
                            <additionalClasspathElement>${basedir}/target/classes</additionalClasspathElement>
                        </additionalClasspathElements>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${buildhelper.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>add-integration-test-sources</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>src/it/java</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-integration-test-resources</id>
                            <phase>generate-test-resources</phase>
                            <goals>
                                <goal>add-test-resource</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <filtering>true</filtering>
                                        <directory>src/it/resources</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <formats>
                                    <format>XML</format>
                                    <format>HTML</format>
                                </formats>
                                <excludes>
                                    <exclude>**/Application.class</exclude>
                                    <exclude>**/*Config.class</exclude>
                                    <exclude>**/*Aspect.class</exclude>
                                    <exclude>**/*Exception.class</exclude>
                                    <exclude>**/*Guard.class</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                        <execution>
                            <id>jacoco-check</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <element>BUNDLE</element>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>0%</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <configuration>
                        <descriptors>
                            <descriptor>src/assembly/bin.xml</descriptor>
                        </descriptors>
                        <finalName>${project.artifactId}-${project.version}</finalName>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--

                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${mvn-release.plugin.version}</version>
                    <configuration>
                        <tagNameFormat>v@{project.version}</tagNameFormat>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${failsafe.plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-maven-plugin</artifactId>
                <version>${jasypt.version}</version>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependencycheck.plugin.version}</version>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>build-docker</id>
            <properties>
                <maven.deploy.skip>true</maven.deploy.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <!-- build and deploy docker image -->
                        <!-- mvn compile jib:build -P build-docker -->
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>${mvn-jib-plugin.version}</version>
                        <configuration>
                            <!-- By default, Jib uses the distro-less java image -->
                            <from>
                                <image>openjdk:17-jdk-slim</image>
                                <!-- image>openjdk@sha256:29eca747201257182d746a59ebc96751436ccec372274c0cf22229b44ea0073c</image -->
                            </from>
                            <to>
                                <!-- <image>gunnarroregistry.azurecr.io/${project.artifactId}</image> -->
                                <!-- image path at hub.docker.com, see mvn settings.xml file -->
                                <image>registry.hub.docker.com/gunnarro/todo-service</image>
                                <tags>
                                    <tag>${project.version}</tag>
                                    <tag>latest</tag>
                                </tags>
                            </to>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>verify-rest-api</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.ethlo.zally</groupId>
                        <artifactId>zally-maven-plugin</artifactId>
                        <version>${zally-maven-plugin.version}</version>
                        <configuration>
                            <!--Configure severities that fail the build. Default is MUST, SHOULD -->
                            <failOn>MUST</failOn>
                            <!-- The input file to validate -->
                            <source>docs/openapi/todo-service-api.yaml</source>
                            <!--Ignore certain rules. Default is none -->
                            <skipRules>
                                <skipRule>ApiAudienceRule</skipRule>
                                <skipRule>ApiIdentifierRule</skipRule>
                                <skipRule>ApiMetaInformationRule</skipRule>
                                <skipRule>SecureAllEndpointsWithScopesRule</skipRule>
                                <skipRule>NoVersionInUriRule</skipRule>
                                <skipRule>PluralizeNamesForArraysRule</skipRule>
                                <skipRule>UseProblemJsonRule</skipRule>
                                <skipRule>JsonProblemAsDefaultResponseRule</skipRule> <!-- problem json spec https://www.rfc-editor.org/rfc/rfc9457.html -->
                                <skipRule>SnakeCaseInPropNameRule</skipRule>
                                <skipRule>Use429HeaderForRateLimitRule</skipRule>
                                <skipRule>PluralizeResourceNamesRule</skipRule>
                                <skipRule>VersionInInfoSectionRule</skipRule>
                                <skipRule>DateTimePropertiesSuffixRule</skipRule>
                                <skipRule>SecureAllEndpointsRule</skipRule>
                                <skipRule>VersionInInfoSectionRule</skipRule>
                                <skipRule>CommonFieldTypesRule</skipRule>
                            </skipRules>
                            <ruleConfigs>
                                <!-- NOTE: The rule elements' content can be written in JSON or YAML -->
                                <PluralizeResourceNamesRule>
                                    whitelist:
                                    - current
                                    - self
                                </PluralizeResourceNamesRule>
                            </ruleConfigs>
                            <!-- Alternatively rules can be configured with configuration file -->
                            <!-- rulesConfigLocation>reference.conf</rulesConfigLocation -->
                            <!-- Write the result of the validation to file. Optional-->
                            <resultFile>target/todo-service-api_validation_result.yaml</resultFile>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>report</goal>
                                    <goal>validate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <!-- The pluggable rule-set you want to run -->
                                <groupId>org.zalando</groupId>
                                <artifactId>zally-ruleset-zalando</artifactId>
                                <version>${zally-ruleset-zalando.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>xitunittest</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <skip.integration.tests>true</skip.integration.tests>
                <skip.unit.tests>false</skip.unit.tests>
                <skip.integrationtests>true</skip.integrationtests>
            </properties>
        </profile>
        <profile>
            <id>integration</id>
            <properties>
                <skip.integration.tests>false</skip.integration.tests>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integrationtests>false</skip.integrationtests>
            </properties>
        </profile>
        <profile>
            <id>securitycheck</id>
            <build>
                <plugins>
                    <plugin>
                        <!--
                        The dependency check may take long time.
                        request NVD API key:
                        https://nvd.nist.gov/developers/request-an-api-key
                        to slow must have API key
                        -->
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>${dependencycheck.plugin.version}</version>
                        <configuration>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- for deploy artifact to github packages -->
            <id>github</id>
            <properties>
                <skip.integration.tests>true</skip.integration.tests>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integrationtests>true</skip.integrationtests>
            </properties>
            <distributionManagement>
                <repository>
                    <id>github</id>
                    <name>GitHub Packages</name>
                    <url>https://maven.pkg.github.com/gunnarro/microservice-archetype</url>
                </repository>
            </distributionManagement>
        </profile>
    </profiles>
</project>
